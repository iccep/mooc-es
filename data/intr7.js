(function(){
	var loadHandler = window['i_{92E00C6E-FA28-4601-8261-76AF7DA0482E}'];
	var interactionJson = "{"d":{"i":"interactivity_fr20nsxjeptc","C":{"is":[{"i":"ob2c2plj2cnb","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">A-B</span></p>","a":"<p><b>A-B</b></p>","r":[],"d":["A-B"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Aceves, T. C., &amp; Orosco, M. J. (2014). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Culturally responsive teaching</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (Document No. IC-2). Retrieved October, 20</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"><sup>th</sup></span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, 2019, from </span><a title=\"http://ceedar.education.ufl.edu/tools/innovation-configurations/\" href=\"http://ceedar.education.ufl.edu/tools/innovation-configurations/\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">http://ceedar.education.ufl.edu/tools/innovation-configurations/</span></a></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ainscow, M. (2020). Promoting inclusion and equity in education: lessons from international experiences. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Nordic Journal of Studies in Educational Policy</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">6</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(1), 7-16.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Altrichter, H. (2014). Regionale Bildungslandschaften und neue Steuerung des Schulsystems. In S.G. Huber (ed.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Kooperative Bildungslandschaften. Netzwerke(n) im und mit System</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (pp. 30-48). Cologne: Carl Link/Wolters Kluwer.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">American Evaluation Association (AEA) (2011). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Statement on Cultural Competence on Evaluation.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Retrieved March 19, 2019, from </span><a title=\"http://www.eval.org/p/cm/ld/fid=92\" href=\"http://www.eval.org/p/cm/ld/fid=92\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">http://www.eval.org/p/cm/ld/fid=92</span></a><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Arbuthnot, K. (2017). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Global Perspectives on Educational Testing: Examining Fairness, High-Stakes and Policy Reform</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">. Bingley: Emerald.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Attia, I. (2014). Rassismus (nicht) beim Namen nennen. Bundeszentrale für politische Bildung. </span><a title=\"https://www.bpb.de/apuz/180854/rassismus-nicht-beim-namen-nennen\" href=\"https://www.bpb.de/apuz/180854/rassismus-nicht-beim-namen-nennen\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">https://www.bpb.de/apuz/180854/rassismus-nicht-beim-namen-nennen</span></a><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (02.01.2022)</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Barber, 2010</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Barrett, M., Byram, M., Lázár, I., Mompoint-Gaillard, P. &amp; S. Philippou (2014). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Developing Intercultural Competence through Education. </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Strasbourg: Council of Europe Publishing.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Berkemeyer, N., Manitius, V., Müthing, K. &amp; Bos, W. (2009). Ergebnisse nationaler und internationaler Forschung zu schulischen Innovationsnetzwerken. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Zeitschrift für Erziehungswissenschaft 12</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(4), 667-689.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Berkemeyer, M., Bos, W. &amp; Kuper, H. (2010). Netzwerke im Bildungssystem. In: N. Berke­meyer, W. Bos &amp; H. Kuper (Hrsg.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Schulreform durch Vernetzung. Interdisziplinäre Betrachtungen</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (pp. 11-19). Münster: Waxmann.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Bolton, G. (2010). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Reflective practice: Writing and Professional Development.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> London: Sage. </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Boos, F., Exner, A. &amp; Heitger, B. (2000). Soziale Netzwerke sind anders … </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Journal für Schulentwicklung, 4</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(3), 14–19.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Brown, M., McNamara, G., O’Hara, J., &amp; Shevlin, P. (2020). Polycentric inspection: A catalyst for sparking positive interactions in educational networks. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluation</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">26</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(1), 76-97.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Brown, M., Altrichter, H., Shyan, I., Rodríguez Conde, M. J., McNamara, G., Herzog-Punzenberger, B., Vorobyeva, I., Zangrando, V., Gardezi, S., O&#39;Hara, J., Postlbauer, A., Milyaeva, D., Ageeva, N., Fulterer, S., Gamazo García, A., &amp; Sánchez, L. (2022). Challenges and Opportunities for Culturally Responsive Leadership in Schools: Evidence from Four European Countries. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Policy Futures in Education, 20</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(5), 580-607. </span><a title=\"https://doi.or/10.1177/14782103211040909\" href=\"https://doi.or/10.1177/14782103211040909\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">https://doi.or/10.1177/14782103211040909</span></a><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(Brown et al., 2023xx)</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Bryk, A.S., Bender Sebring, P., Allensworth, E., Luppescu, S. &amp; Easton, J.Q. (2010). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Organising Schools for Improvement. Lessons from Chicago.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Chicago: The University of Chicago Press.</span></p>","a":"<p>Aceves, T. C., &amp; Orosco, M. J. (2014). <i>Culturally responsive teaching</i> (Document No. IC-2). Retrieved October, 20<sup>th</sup>, 2019, from <a title=\"http://ceedar.education.ufl.edu/tools/innovation-configurations/\" href=\"http://ceedar.education.ufl.edu/tools/innovation-configurations/\" target=\"_blank\"><u>http://ceedar.education.ufl.edu/tools/innovation-configurations/</u></a></p><p><u>Ainscow, M. (2020). Promoting inclusion and equity in education: lessons from international experiences. </u><i>Nordic Journal of Studies in Educational Policy</i>, <i>6</i>(1), 7-16.</p><p>Altrichter, H. (2014). Regionale Bildungslandschaften und neue Steuerung des Schulsystems. In S.G. Huber (ed.), <i>Kooperative Bildungslandschaften. Netzwerke(n) im und mit System</i> (pp. 30-48). Cologne: Carl Link/Wolters Kluwer.</p><p>American Evaluation Association (AEA) (2011). <i>Statement on Cultural Competence on Evaluation.</i> Retrieved March 19, 2019, from <a title=\"http://www.eval.org/p/cm/ld/fid=92\" href=\"http://www.eval.org/p/cm/ld/fid=92\" target=\"_blank\"><u>http://www.eval.org/p/cm/ld/fid=92</u></a><i> </i></p><p>Arbuthnot, K. (2017). <i>Global Perspectives on Educational Testing: Examining Fairness, High-Stakes and Policy Reform</i>. Bingley: Emerald.</p><p>Attia, I. (2014). Rassismus (nicht) beim Namen nennen. Bundeszentrale für politische Bildung. <a title=\"https://www.bpb.de/apuz/180854/rassismus-nicht-beim-namen-nennen\" href=\"https://www.bpb.de/apuz/180854/rassismus-nicht-beim-namen-nennen\" target=\"_blank\"><u>https://www.bpb.de/apuz/180854/rassismus-nicht-beim-namen-nennen</u></a> (02.01.2022)</p><p>Barber, 2010</p><p>Barrett, M., Byram, M., Lázár, I., Mompoint-Gaillard, P. &amp; S. Philippou (2014). <i>Developing Intercultural Competence through Education. </i>Strasbourg: Council of Europe Publishing.</p><p>Berkemeyer, N., Manitius, V., Müthing, K. &amp; Bos, W. (2009). Ergebnisse nationaler und internationaler Forschung zu schulischen Innovationsnetzwerken. <i>Zeitschrift für Erziehungswissenschaft 12</i>(4), 667-689.</p><p>Berkemeyer, M., Bos, W. &amp; Kuper, H. (2010). Netzwerke im Bildungssystem. In: N. Berke­meyer, W. Bos &amp; H. Kuper (Hrsg.), <i>Schulreform durch Vernetzung. Interdisziplinäre Betrachtungen</i> (pp. 11-19). Münster: Waxmann.</p><p>Bolton, G. (2010). <i>Reflective practice: Writing and Professional Development.</i> London: Sage. </p><p>Boos, F., Exner, A. &amp; Heitger, B. (2000). Soziale Netzwerke sind anders … <i>Journal für Schulentwicklung, 4</i>(3), 14–19.</p><p>Brown, M., McNamara, G., O’Hara, J., &amp; Shevlin, P. (2020). Polycentric inspection: A catalyst for sparking positive interactions in educational networks. <i>Evaluation</i>, <i>26</i>(1), 76-97.</p><p>Brown, M., Altrichter, H., Shyan, I., Rodríguez Conde, M. J., McNamara, G., Herzog-Punzenberger, B., Vorobyeva, I., Zangrando, V., Gardezi, S., O&#39;Hara, J., Postlbauer, A., Milyaeva, D., Ageeva, N., Fulterer, S., Gamazo García, A., &amp; Sánchez, L. (2022). Challenges and Opportunities for Culturally Responsive Leadership in Schools: Evidence from Four European Countries. <i>Policy Futures in Education, 20</i>(5), 580-607. <a title=\"https://doi.or/10.1177/14782103211040909\" href=\"https://doi.or/10.1177/14782103211040909\" target=\"_blank\"><u>https://doi.or/10.1177/14782103211040909</u></a> </p><p>(Brown et al., 2023xx)</p><p>Bryk, A.S., Bender Sebring, P., Allensworth, E., Luppescu, S. &amp; Easton, J.Q. (2010). <i>Organising Schools for Improvement. Lessons from Chicago.</i> Chicago: The University of Chicago Press.</p>","r":[],"d":["Aceves, T. C., & Orosco, M. J. (2014). Culturally responsive teaching (Document No. IC-2). Retrieved October, 20th, 2019, from http://ceedar.education.ufl.edu/tools/innovation-configurations/\nAinscow, M. (2020). Promoting inclusion and equity in education: lessons from international experiences. Nordic Journal of Studies in Educational Policy, 6(1), 7-16.\nAltrichter, H. (2014). Regionale Bildungslandschaften und neue Steuerung des Schulsystems. In S.G. Huber (ed.), Kooperative Bildungslandschaften. Netzwerke(n) im und mit System (pp. 30-48). Cologne: Carl Link/Wolters Kluwer.\nAmerican Evaluation Association (AEA) (2011). Statement on Cultural Competence on Evaluation. Retrieved March 19, 2019, from http://www.eval.org/p/cm/ld/fid=92 \nArbuthnot, K. (2017). Global Perspectives on Educational Testing: Examining Fairness, High-Stakes and Policy Reform. Bingley: Emerald.\nAttia, I. (2014). Rassismus (nicht) beim Namen nennen. Bundeszentrale für politische Bildung. https://www.bpb.de/apuz/180854/rassismus-nicht-beim-namen-nennen (02.01.2022)\nBarber, 2010\nBarrett, M., Byram, M., Lázár, I., Mompoint-Gaillard, P. & S. Philippou (2014). Developing Intercultural Competence through Education. Strasbourg: Council of Europe Publishing.\nBerkemeyer, N., Manitius, V., Müthing, K. & Bos, W. (2009). Ergebnisse nationaler und internationaler Forschung zu schulischen Innovationsnetzwerken. Zeitschrift für Erziehungswissenschaft 12(4), 667-689.\nBerkemeyer, M., Bos, W. & Kuper, H. (2010). Netzwerke im Bildungssystem. In: N. Berke­meyer, W. Bos & H. Kuper (Hrsg.), Schulreform durch Vernetzung. Interdisziplinäre Betrachtungen (pp. 11-19). Münster: Waxmann.\nBolton, G. (2010). Reflective practice: Writing and Professional Development. London: Sage. \nBoos, F., Exner, A. & Heitger, B. (2000). Soziale Netzwerke sind anders … Journal für Schulentwicklung, 4(3), 14–19.\nBrown, M., McNamara, G., O’Hara, J., & Shevlin, P. (2020). Polycentric inspection: A catalyst for sparking positive interactions in educational networks. Evaluation, 26(1), 76-97.\nBrown, M., Altrichter, H., Shyan, I., Rodríguez Conde, M. J., McNamara, G., Herzog-Punzenberger, B., Vorobyeva, I., Zangrando, V., Gardezi, S., O'Hara, J., Postlbauer, A., Milyaeva, D., Ageeva, N., Fulterer, S., Gamazo García, A., & Sánchez, L. (2022). Challenges and Opportunities for Culturally Responsive Leadership in Schools: Evidence from Four European Countries. Policy Futures in Education, 20(5), 580-607. https://doi.or/10.1177/14782103211040909 \n(Brown et al., 2023xx)\nBryk, A.S., Bender Sebring, P., Allensworth, E., Luppescu, S. & Easton, J.Q. (2010). Organising Schools for Improvement. Lessons from Chicago. Chicago: The University of Chicago Press."]},"tp":"item"},{"i":"pya449810rsq","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">C-L</span></p>","a":"<p><b>C-L</b></p>","r":[],"d":["C-L"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Centre for Community Based Research, (2019). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Evaluating Refugee Programs. </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Accessed 30 November 2020 from https://www.eval4refugee.ca/what-is-community-based-evaluation</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Chapman, C. (2019). From hierarchies to networks. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Journal of Educational Administration,</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">57</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(5), 554-570.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Crul, M., Schneider, J., &amp; Lelie, F. (2012) (eds.). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">The European Second Generation Compared. Does the Integration Context Matter?</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Retrieved February, 9th, 2020 from </span><a title=\"http://www.tiesproject.eu/component/option,com_docman/task,cat_view/gid,44/Itemid,142/\" href=\"http://www.tiesproject.eu/component/option,com_docman/task,cat_view/gid,44/Itemid,142/\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">http://www.tiesproject.eu/component/option,com_docman/task,cat_view/gid,44/Itemid,142/</span></a></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Desforges, C., &amp; Abouchaar, A. (2003). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">The impact of parental involvement, parental support and family education on pupil achievement and adjustment: A literature review</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (Vol. 433). London: DfES.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Feldman, A., Altrichter, H., Posch, P. &amp; Somekh, B. (2018). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Teachers Investigate their Work.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> 3</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"><sup>rd</sup></span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> edition. London &amp; New York: Routledge. </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ford, D. Y., &amp; Kea, C. D. (2009). Creating culturally responsive instruction: For students’ sake and teachers’ sake. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Focus on Exceptional Children</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, (41), 1-18.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Gay, G. (2010). Culturally responsive teaching: Theory, research, and practice (2nd ed.). New York, NY: Teachers College Press.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Hadfield, M. &amp; Jopling, M. (2011). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Networking and collaboration in urban contexts in England: The problems and possibilities of working together to improve social inclusion</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">. Paper given at the ECER-Conference 2011, Berlin.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Harris, A., &amp; Goodall, J. (2008). Do parents know they matter? Engaging all parents in learning. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Educational Research</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">50</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(3), 277-289. </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Herzog-Punzenberger, B., Altrichter, H., Brown, M., Burns, D., Nortvedt, G. A., Skedsmo, G., Wiese, E., Nayir, F., Fellner, M., McNamara, G., &amp; O’Hara, J. (2020). Teachers responding to cultural diversity: Case studies on assessment practices, challenges and experiences in secondary schools in Austria, Ireland, Norway and Turkey. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Educational Assessment, Evaluation and Accountability, 32</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(3), 395–424. </span><a title=\"https://doi.org/10.1007/s11092-020-09330-y\" href=\"https://doi.org/10.1007/s11092-020-09330-y\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">https://doi.org/10.1007/s11092-020-09330-y</span></a></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Herzog-Punzenberger, B., Brown, M., Altrichter, H. &amp; Gardezi, S. (2022). Preparing Teachers for Diversity: How are Teacher Education Systems Responding to </span><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Cultural Diversity </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">– The Case of Austria and Ireland. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Teachers and Teaching: Theory and Practice </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(online first). </span><a title=\"http://dx.doi.org/10.1080/13540602.2022.2062734\" href=\"http://dx.doi.org/10.1080/13540602.2022.2062734\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">http://dx.doi.org/10.1080/13540602.2022.2062734</span></a></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Hoyle, E. (1982). Micropolitics of educational organizations. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Educational Management and Administration, 10</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(2), 87–98.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Kussau, J. &amp; Brüsemeister, T. (2007). Educational Governance: Zur Analyse der Handlungs­koordination im Mehrebenensystem der Schule. In H. Altrichter, T. Brüsemeister &amp; J. Wissinger (eds.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Educational Governance </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(pp. 15–54). Wiesbaden: VS.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ladson-Billings, G. (1995). Toward a theory of culturally relevant teaching. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">American Educational Research Journal, 32</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(3), 465-491.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Lange, S. &amp; Schimank, U. (2004). Governance und gesellschaftliche Integration. In S. Lange &amp; U. Schimank (eds.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Governance und gesellschaftliche Integration </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(pp. 9-46). Wiesbaden: VS. </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Linnemann, T., Mecheril, P., &amp; Nikolenko, A. (2013). Rassismuskritik. Begriffliche Grundlagen und Handlungsperspektiven in der politischen Bildung. Zeitschrift für internationale Bildungsforschung und Entwicklungspädagogik, 36(2), 10-14.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Linnemann, T., Wojciechowicz, A., &amp; Yiligin, F. (2016). Vom Defizitblick über Differenzdenken zur Machtkritik – Ein Blick auf pädagogische Konzepte in der Migrationsgesellschaft. In Informations- und Dokumentationszentrum für Antirassismusarbeit in Nordrhein-Westfalen (IDA-NRW) (ed.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Kinder- und Jugendarbeit zu rassismuskritischen Orten entwickeln</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (pp. 65-71)</span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Düsseldorf.</span></p>","a":"<p>Centre for Community Based Research, (2019). <i>Evaluating Refugee Programs. </i>Accessed 30 November 2020 from https://www.eval4refugee.ca/what-is-community-based-evaluation</p><p>Chapman, C. (2019). From hierarchies to networks. <i>Journal of Educational Administration,</i> <i>57</i>(5), 554-570.</p><p>Crul, M., Schneider, J., &amp; Lelie, F. (2012) (eds.). <i>The European Second Generation Compared. Does the Integration Context Matter?</i> Retrieved February, 9th, 2020 from <a title=\"http://www.tiesproject.eu/component/option,com_docman/task,cat_view/gid,44/Itemid,142/\" href=\"http://www.tiesproject.eu/component/option,com_docman/task,cat_view/gid,44/Itemid,142/\" target=\"_blank\"><u>http://www.tiesproject.eu/component/option,com_docman/task,cat_view/gid,44/Itemid,142/</u></a></p><p>Desforges, C., &amp; Abouchaar, A. (2003). <i>The impact of parental involvement, parental support and family education on pupil achievement and adjustment: A literature review</i> (Vol. 433). London: DfES.</p><p>Feldman, A., Altrichter, H., Posch, P. &amp; Somekh, B. (2018). <i>Teachers Investigate their Work.</i> 3<sup>rd</sup> edition. London &amp; New York: Routledge. </p><p>Ford, D. Y., &amp; Kea, C. D. (2009). Creating culturally responsive instruction: For students’ sake and teachers’ sake. <i>Focus on Exceptional Children</i>, (41), 1-18.</p><p>Gay, G. (2010). Culturally responsive teaching: Theory, research, and practice (2nd ed.). New York, NY: Teachers College Press.</p><p>Hadfield, M. &amp; Jopling, M. (2011). <i>Networking and collaboration in urban contexts in England: The problems and possibilities of working together to improve social inclusion</i>. Paper given at the ECER-Conference 2011, Berlin.</p><p>Harris, A., &amp; Goodall, J. (2008). Do parents know they matter? Engaging all parents in learning. <i>Educational Research</i>, <i>50</i>(3), 277-289. </p><p>Herzog-Punzenberger, B., Altrichter, H., Brown, M., Burns, D., Nortvedt, G. A., Skedsmo, G., Wiese, E., Nayir, F., Fellner, M., McNamara, G., &amp; O’Hara, J. (2020). Teachers responding to cultural diversity: Case studies on assessment practices, challenges and experiences in secondary schools in Austria, Ireland, Norway and Turkey. <i>Educational Assessment, Evaluation and Accountability, 32</i>(3), 395–424. <a title=\"https://doi.org/10.1007/s11092-020-09330-y\" href=\"https://doi.org/10.1007/s11092-020-09330-y\" target=\"_blank\"><u>https://doi.org/10.1007/s11092-020-09330-y</u></a></p><p>Herzog-Punzenberger, B., Brown, M., Altrichter, H. &amp; Gardezi, S. (2022). Preparing Teachers for Diversity: How are Teacher Education Systems Responding to <u>Cultural Diversity </u>– The Case of Austria and Ireland. <i>Teachers and Teaching: Theory and Practice </i>(online first). <a title=\"http://dx.doi.org/10.1080/13540602.2022.2062734\" href=\"http://dx.doi.org/10.1080/13540602.2022.2062734\" target=\"_blank\"><u>http://dx.doi.org/10.1080/13540602.2022.2062734</u></a></p><p>Hoyle, E. (1982). Micropolitics of educational organizations. <i>Educational Management and Administration, 10</i>(2), 87–98.</p><p>Kussau, J. &amp; Brüsemeister, T. (2007). Educational Governance: Zur Analyse der Handlungs­koordination im Mehrebenensystem der Schule. In H. Altrichter, T. Brüsemeister &amp; J. Wissinger (eds.), <i>Educational Governance </i>(pp. 15–54). Wiesbaden: VS.</p><p>Ladson-Billings, G. (1995). Toward a theory of culturally relevant teaching. <i>American Educational Research Journal, 32</i>(3), 465-491.</p><p>Lange, S. &amp; Schimank, U. (2004). Governance und gesellschaftliche Integration. In S. Lange &amp; U. Schimank (eds.), <i>Governance und gesellschaftliche Integration </i>(pp. 9-46). Wiesbaden: VS. </p><p>Linnemann, T., Mecheril, P., &amp; Nikolenko, A. (2013). Rassismuskritik. Begriffliche Grundlagen und Handlungsperspektiven in der politischen Bildung. Zeitschrift für internationale Bildungsforschung und Entwicklungspädagogik, 36(2), 10-14.</p><p>Linnemann, T., Wojciechowicz, A., &amp; Yiligin, F. (2016). Vom Defizitblick über Differenzdenken zur Machtkritik – Ein Blick auf pädagogische Konzepte in der Migrationsgesellschaft. In Informations- und Dokumentationszentrum für Antirassismusarbeit in Nordrhein-Westfalen (IDA-NRW) (ed.), <i>Kinder- und Jugendarbeit zu rassismuskritischen Orten entwickeln</i> (pp. 65-71)<i>.</i> Düsseldorf.</p>","r":[],"d":["Centre for Community Based Research, (2019). Evaluating Refugee Programs. Accessed 30 November 2020 from https://www.eval4refugee.ca/what-is-community-based-evaluation\nChapman, C. (2019). From hierarchies to networks. Journal of Educational Administration, 57(5), 554-570.\nCrul, M., Schneider, J., & Lelie, F. (2012) (eds.). The European Second Generation Compared. Does the Integration Context Matter? Retrieved February, 9th, 2020 from http://www.tiesproject.eu/component/option,com_docman/task,cat_view/gid,44/Itemid,142/\nDesforges, C., & Abouchaar, A. (2003). The impact of parental involvement, parental support and family education on pupil achievement and adjustment: A literature review (Vol. 433). London: DfES.\nFeldman, A., Altrichter, H., Posch, P. & Somekh, B. (2018). Teachers Investigate their Work. 3rd edition. London & New York: Routledge. \nFord, D. Y., & Kea, C. D. (2009). Creating culturally responsive instruction: For students’ sake and teachers’ sake. Focus on Exceptional Children, (41), 1-18.\nGay, G. (2010). Culturally responsive teaching: Theory, research, and practice (2nd ed.). New York, NY: Teachers College Press.\nHadfield, M. & Jopling, M. (2011). Networking and collaboration in urban contexts in England: The problems and possibilities of working together to improve social inclusion. Paper given at the ECER-Conference 2011, Berlin.\nHarris, A., & Goodall, J. (2008). Do parents know they matter? Engaging all parents in learning. Educational Research, 50(3), 277-289. \nHerzog-Punzenberger, B., Altrichter, H., Brown, M., Burns, D., Nortvedt, G. A., Skedsmo, G., Wiese, E., Nayir, F., Fellner, M., McNamara, G., & O’Hara, J. (2020). Teachers responding to cultural diversity: Case studies on assessment practices, challenges and experiences in secondary schools in Austria, Ireland, Norway and Turkey. Educational Assessment, Evaluation and Accountability, 32(3), 395–424. https://doi.org/10.1007/s11092-020-09330-y\nHerzog-Punzenberger, B., Brown, M., Altrichter, H. & Gardezi, S. (2022). Preparing Teachers for Diversity: How are Teacher Education Systems Responding to Cultural Diversity – The Case of Austria and Ireland. Teachers and Teaching: Theory and Practice (online first). http://dx.doi.org/10.1080/13540602.2022.2062734\nHoyle, E. (1982). Micropolitics of educational organizations. Educational Management and Administration, 10(2), 87–98.\nKussau, J. & Brüsemeister, T. (2007). Educational Governance: Zur Analyse der Handlungs­koordination im Mehrebenensystem der Schule. In H. Altrichter, T. Brüsemeister & J. Wissinger (eds.), Educational Governance (pp. 15–54). Wiesbaden: VS.\nLadson-Billings, G. (1995). Toward a theory of culturally relevant teaching. American Educational Research Journal, 32(3), 465-491.\nLange, S. & Schimank, U. (2004). Governance und gesellschaftliche Integration. In S. Lange & U. Schimank (eds.), Governance und gesellschaftliche Integration (pp. 9-46). Wiesbaden: VS. \nLinnemann, T., Mecheril, P., & Nikolenko, A. (2013). Rassismuskritik. Begriffliche Grundlagen und Handlungsperspektiven in der politischen Bildung. Zeitschrift für internationale Bildungsforschung und Entwicklungspädagogik, 36(2), 10-14.\nLinnemann, T., Wojciechowicz, A., & Yiligin, F. (2016). Vom Defizitblick über Differenzdenken zur Machtkritik – Ein Blick auf pädagogische Konzepte in der Migrationsgesellschaft. In Informations- und Dokumentationszentrum für Antirassismusarbeit in Nordrhein-Westfalen (IDA-NRW) (ed.), Kinder- und Jugendarbeit zu rassismuskritischen Orten entwickeln (pp. 65-71). Düsseldorf."]},"tp":"item"},{"i":"ialmndl3gvv3","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">M-S</span></p>","a":"<p><b>M-S</b></p>","r":[],"d":["M-S"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Mecheril</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, P., Castro Varela, M., Dirim, I., Kalpaka, A. &amp; Melter, C. (2010). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Migrationspädagogik.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Weinheim: Beltz. ​ ​ </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Mecheril, P. (2016): Migrationspädagogik – ein Projekt. In P. Mecheril (ed.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Handbuch Migrationspädagogik</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (pp. 8-30.). Weinheim: Beltz. </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Mecheril, P. &amp; Melter, C. (2010). Gewöhnliche Unterscheidungen. Wege aus dem Rassismus. In S. Andresen, K. Hurrelmann, C. Palentien &amp; W. Schröer (eds.), Migrationspädagogik (pp. 150-178). Weinheim und Basel: Beltz.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Nazarkiewicz, K. &amp; Krämer, G. (2013)</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">. Interkulturell, multikulturell, transkulturell: Kultur(en) in Begleitprozessen systematisch berücksichtigen. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Kontext, 44</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(1), 22 – 40.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Nguyen, T. Q. (2014). „Offensichtlich und zugedeckt“- Alltagsrassismus in Deutschland. Bundeszentrale für politische Bildung </span><a title=\"https://www.bpb.de/dialog/194569/offensichtlich-und-zugedeckt-alltagsrassismus-in-deutschland\" href=\"https://www.bpb.de/dialog/194569/offensichtlich-und-zugedeckt-alltagsrassismus-in-deutschland\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">https://www.bpb.de/dialog/194569/offensichtlich-und-zugedeckt-alltagsrassismus-in-deutschland</span></a><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (02.01.2022)</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">OECD (2009). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">OECD Toolkit on Teaching for Diversity. for Teaching on Diversity. </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Retrieved September, 5th, 2019 from </span><a title=\"http://www.oecd.org/general/searchresults/?q=Toolkit%20for%20teachers%20of%20diversity\" href=\"http://www.oecd.org/general/searchresults/?q=Toolkit%20for%20teachers%20of%20diversity\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">http://www.oecd.org/general/searchresults/?q=Toolkit%20for%20teachers%20of%20diversity</span></a></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">OECD (2016). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Global competency for an inclusive world.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Paris: OECD.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">OECD (2019). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">TALIS 2018 Results (Vol. I): Teachers and School Leaders as Lifelong Learners.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Paris: OECD.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">O&#39;Hara, J., Brown, M., McNamara, G., &amp; Shevlin, P. (2020). The potential, limitations and evaluation of education networks in a monocentric system. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Revista de Investigación Educativa</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> 38, no. 1, ​ 33-52.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Povey, J., Campbell, A. K., Willis, L. D., Haynes, M., Western, M., Bennett, S., ... &amp; Pedde, C. (2016). Engaging parents in schools and building parent-school partnerships: The role of school and parent organisation leadership. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">International Journal of Educational Research</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">79</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, 128-141.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Rincón-Gallardo, S .&amp; Fullan, M. (2016). Essential features of effective networks in education. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Journal of Professional Capital and Community, 1</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">(1), 5–22.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Roothaan, A. (2019)</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">. Interkulturell, transkulturell, cross-cultural – warum wir alle drei Begriffe brauchen. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Polylog, 40,</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> 67 -82.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ruggs, E., &amp; Hebl, M. (2012). Literature overview: Diversity, inclusion, and cultural awareness for classroom and outreach education. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Apply research to practice (ARP) resources</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, 9781315437453-3.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Schachner, M. K., Brenick, A., Noack, P., Van de Vijver, F. J., &amp; Heizmann, B. (2015). Structural and normative conditions for interethnic friendships in multiethnic classrooms. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">International Journal of Intercultural Relations</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">47</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">, 1-12.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Schön, D. A. (1983). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">The Reflective Practitioner: How Professionals Think in Action</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">. New York: Basic Books.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sinner, K. (2011). Transkulturalität versus Multi und Interkulturalität. </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">stadtkultur magazin, 16,</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> 10-11. </span><a title=\"https://www.stadtkultur-hh.de/wp-content/uploads/2015/02/stadtkultur_magazin_16.pdf\" href=\"https://www.stadtkultur-hh.de/wp-content/uploads/2015/02/stadtkultur_magazin_16.pdf\" target=\"_blank\"><span style=\"text-decoration:underline ;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">https://www.stadtkultur-hh.de/wp-content/uploads/2015/02/stadtkultur_magazin_16.pdf</span></a><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">; 4.5.2023</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sydow, N. (2010). Vernetzung von Schulen? Betriebswirtschaftliche Erkenntnisse zum Netzwerkmanagement. In N. Berkemeyer, W. Bos &amp; H. Kuper (Hrsg.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Schulreform durch Vernetzung. Interdisziplinäre Betrachtungen</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (pp. 33-48)</span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">. </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Münster: Waxmann.</span></p>","a":"<p><u>Mecheril</u>, P., Castro Varela, M., Dirim, I., Kalpaka, A. &amp; Melter, C. (2010). <i>Migrationspädagogik.</i> Weinheim: Beltz. ​ ​ </p><p>Mecheril, P. (2016): Migrationspädagogik – ein Projekt. In P. Mecheril (ed.), <i>Handbuch Migrationspädagogik</i> (pp. 8-30.). Weinheim: Beltz. </p><p>Mecheril, P. &amp; Melter, C. (2010). Gewöhnliche Unterscheidungen. Wege aus dem Rassismus. In S. Andresen, K. Hurrelmann, C. Palentien &amp; W. Schröer (eds.), Migrationspädagogik (pp. 150-178). Weinheim und Basel: Beltz.</p><p><u>Nazarkiewicz, K. &amp; Krämer, G. (2013)</u>. Interkulturell, multikulturell, transkulturell: Kultur(en) in Begleitprozessen systematisch berücksichtigen. <i>Kontext, 44</i>(1), 22 – 40.</p><p>Nguyen, T. Q. (2014). „Offensichtlich und zugedeckt“- Alltagsrassismus in Deutschland. Bundeszentrale für politische Bildung <a title=\"https://www.bpb.de/dialog/194569/offensichtlich-und-zugedeckt-alltagsrassismus-in-deutschland\" href=\"https://www.bpb.de/dialog/194569/offensichtlich-und-zugedeckt-alltagsrassismus-in-deutschland\" target=\"_blank\"><u>https://www.bpb.de/dialog/194569/offensichtlich-und-zugedeckt-alltagsrassismus-in-deutschland</u></a> (02.01.2022)</p><p>OECD (2009). <i>OECD Toolkit on Teaching for Diversity. for Teaching on Diversity. </i>Retrieved September, 5th, 2019 from <a title=\"http://www.oecd.org/general/searchresults/?q=Toolkit%20for%20teachers%20of%20diversity\" href=\"http://www.oecd.org/general/searchresults/?q=Toolkit%20for%20teachers%20of%20diversity\" target=\"_blank\"><u>http://www.oecd.org/general/searchresults/?q=Toolkit%20for%20teachers%20of%20diversity</u></a></p><p>OECD (2016). <i>Global competency for an inclusive world.</i> Paris: OECD.</p><p>OECD (2019). <i>TALIS 2018 Results (Vol. I): Teachers and School Leaders as Lifelong Learners.</i> Paris: OECD.</p><p>O&#39;Hara, J., Brown, M., McNamara, G., &amp; Shevlin, P. (2020). The potential, limitations and evaluation of education networks in a monocentric system. <i>Revista de Investigación Educativa</i> 38, no. 1, ​ 33-52.</p><p>Povey, J., Campbell, A. K., Willis, L. D., Haynes, M., Western, M., Bennett, S., ... &amp; Pedde, C. (2016). Engaging parents in schools and building parent-school partnerships: The role of school and parent organisation leadership. <i>International Journal of Educational Research</i>, <i>79</i>, 128-141.</p><p>Rincón-Gallardo, S .&amp; Fullan, M. (2016). Essential features of effective networks in education. <i>Journal of Professional Capital and Community, 1</i>(1), 5–22.</p><p><u>Roothaan, A. (2019)</u>. Interkulturell, transkulturell, cross-cultural – warum wir alle drei Begriffe brauchen. <i>Polylog, 40,</i> 67 -82.</p><p>Ruggs, E., &amp; Hebl, M. (2012). Literature overview: Diversity, inclusion, and cultural awareness for classroom and outreach education. <i>Apply research to practice (ARP) resources</i>, 9781315437453-3.</p><p>Schachner, M. K., Brenick, A., Noack, P., Van de Vijver, F. J., &amp; Heizmann, B. (2015). Structural and normative conditions for interethnic friendships in multiethnic classrooms. <i>International Journal of Intercultural Relations</i>, <i>47</i>, 1-12.</p><p>Schön, D. A. (1983). <i>The Reflective Practitioner: How Professionals Think in Action</i>. New York: Basic Books.</p><p>Sinner, K. (2011). Transkulturalität versus Multi und Interkulturalität. <i>stadtkultur magazin, 16,</i> 10-11. <a title=\"https://www.stadtkultur-hh.de/wp-content/uploads/2015/02/stadtkultur_magazin_16.pdf\" href=\"https://www.stadtkultur-hh.de/wp-content/uploads/2015/02/stadtkultur_magazin_16.pdf\" target=\"_blank\"><u>https://www.stadtkultur-hh.de/wp-content/uploads/2015/02/stadtkultur_magazin_16.pdf</u></a>; 4.5.2023</p><p>Sydow, N. (2010). Vernetzung von Schulen? Betriebswirtschaftliche Erkenntnisse zum Netzwerkmanagement. In N. Berkemeyer, W. Bos &amp; H. Kuper (Hrsg.), <i>Schulreform durch Vernetzung. Interdisziplinäre Betrachtungen</i> (pp. 33-48)<i>. </i>Münster: Waxmann.</p>","r":[],"d":["Mecheril, P., Castro Varela, M., Dirim, I., Kalpaka, A. & Melter, C. (2010). Migrationspädagogik. Weinheim: Beltz.   \nMecheril, P. (2016): Migrationspädagogik – ein Projekt. In P. Mecheril (ed.), Handbuch Migrationspädagogik (pp. 8-30.). Weinheim: Beltz. \nMecheril, P. & Melter, C. (2010). Gewöhnliche Unterscheidungen. Wege aus dem Rassismus. In S. Andresen, K. Hurrelmann, C. Palentien & W. Schröer (eds.), Migrationspädagogik (pp. 150-178). Weinheim und Basel: Beltz.\nNazarkiewicz, K. & Krämer, G. (2013). Interkulturell, multikulturell, transkulturell: Kultur(en) in Begleitprozessen systematisch berücksichtigen. Kontext, 44(1), 22 – 40.\nNguyen, T. Q. (2014). „Offensichtlich und zugedeckt“- Alltagsrassismus in Deutschland. Bundeszentrale für politische Bildung https://www.bpb.de/dialog/194569/offensichtlich-und-zugedeckt-alltagsrassismus-in-deutschland (02.01.2022)\nOECD (2009). OECD Toolkit on Teaching for Diversity. for Teaching on Diversity. Retrieved September, 5th, 2019 from http://www.oecd.org/general/searchresults/?q=Toolkit%20for%20teachers%20of%20diversity\nOECD (2016). Global competency for an inclusive world. Paris: OECD.\nOECD (2019). TALIS 2018 Results (Vol. I): Teachers and School Leaders as Lifelong Learners. Paris: OECD.\nO'Hara, J., Brown, M., McNamara, G., & Shevlin, P. (2020). The potential, limitations and evaluation of education networks in a monocentric system. Revista de Investigación Educativa 38, no. 1,  33-52.\nPovey, J., Campbell, A. K., Willis, L. D., Haynes, M., Western, M., Bennett, S., ... & Pedde, C. (2016). Engaging parents in schools and building parent-school partnerships: The role of school and parent organisation leadership. International Journal of Educational Research, 79, 128-141.\nRincón-Gallardo, S .& Fullan, M. (2016). Essential features of effective networks in education. Journal of Professional Capital and Community, 1(1), 5–22.\nRoothaan, A. (2019). Interkulturell, transkulturell, cross-cultural – warum wir alle drei Begriffe brauchen. Polylog, 40, 67 -82.\nRuggs, E., & Hebl, M. (2012). Literature overview: Diversity, inclusion, and cultural awareness for classroom and outreach education. Apply research to practice (ARP) resources, 9781315437453-3.\nSchachner, M. K., Brenick, A., Noack, P., Van de Vijver, F. J., & Heizmann, B. (2015). Structural and normative conditions for interethnic friendships in multiethnic classrooms. International Journal of Intercultural Relations, 47, 1-12.\nSchön, D. A. (1983). The Reflective Practitioner: How Professionals Think in Action. New York: Basic Books.\nSinner, K. (2011). Transkulturalität versus Multi und Interkulturalität. stadtkultur magazin, 16, 10-11. https://www.stadtkultur-hh.de/wp-content/uploads/2015/02/stadtkultur_magazin_16.pdf; 4.5.2023\nSydow, N. (2010). Vernetzung von Schulen? Betriebswirtschaftliche Erkenntnisse zum Netzwerkmanagement. In N. Berkemeyer, W. Bos & H. Kuper (Hrsg.), Schulreform durch Vernetzung. Interdisziplinäre Betrachtungen (pp. 33-48). Münster: Waxmann."]},"tp":"item"},{"i":"dahvzqmgifjr","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">T-Z</span></p>","a":"<p><b>T-Z</b></p>","r":[],"d":["T-Z"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Taylor, C. (2009). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Multikulturalismus und die Politik der Anerkennung.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Frankfurt/Main.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">UNESCO (2009). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Policy guidelines on inclusion in education.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> Paris (Online: http://www.scribd.com/doc/37626440/UNESCOEducation-Inclusion-Policy-Guidelinesalization. pdf)</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">UNESCO [United Nations Educational, Scientific and Cultural Organization] (2018). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Global education monitoring report 2019: migration, displacement and education: building bridges, not walls.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> UNESCO. </span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Voorberg, W., Bekkers, V., &amp; Tummers, L. (2014). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Co-creation in social innovation: a comparative case-study on the influential factors and outcomes of co-creation. </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ottawa: ​ IRSPM.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Wald, A. &amp; Jansen, D. (2007). Netzwerke. In A. Benz, S. Lütz, U. Schimank &amp; G. Simonis (Hrsg.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Handbuch Governance</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (pp. 93–105). Wiesbaden: VS.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Welsch, W. (1999). Transculturality – the puzzling form of cultures today. In M. Featherstone &amp; S. Lash (eds.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Spaces of Culture: City, Nation, World</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (S. 194 – 213). London: Sage.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Welsch, W. (2010). Was ist eigentlich Transkulturalität? In L. Darowska et al. (eds.), </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Hochschule als transkultureller Raum? Kultur, Bildung und Differenz in der Universität</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> (pp. 39–66)</span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">. </span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Bielefeld.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:Open Sans;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Weyer, J. (2000). </span><span style=\"font-size:14px;font-family:fnt1_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Soziale Netzwerke.</span><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\"> München: Oldenbourg.</span></p>","a":"<p>Taylor, C. (2009). <i>Multikulturalismus und die Politik der Anerkennung.</i> Frankfurt/Main.</p><p>UNESCO (2009). <i>Policy guidelines on inclusion in education.</i> Paris (Online: http://www.scribd.com/doc/37626440/UNESCOEducation-Inclusion-Policy-Guidelinesalization. pdf)</p><p>UNESCO [United Nations Educational, Scientific and Cultural Organization] (2018). <i>Global education monitoring report 2019: migration, displacement and education: building bridges, not walls.</i> UNESCO. </p><p>Voorberg, W., Bekkers, V., &amp; Tummers, L. (2014). <i>Co-creation in social innovation: a comparative case-study on the influential factors and outcomes of co-creation. </i>Ottawa: ​ IRSPM.</p><p>Wald, A. &amp; Jansen, D. (2007). Netzwerke. In A. Benz, S. Lütz, U. Schimank &amp; G. Simonis (Hrsg.), <i>Handbuch Governance</i> (pp. 93–105). Wiesbaden: VS.</p><p>Welsch, W. (1999). Transculturality – the puzzling form of cultures today. In M. Featherstone &amp; S. Lash (eds.), <i>Spaces of Culture: City, Nation, World</i> (S. 194 – 213). London: Sage.</p><p>Welsch, W. (2010). Was ist eigentlich Transkulturalität? In L. Darowska et al. (eds.), <i>Hochschule als transkultureller Raum? Kultur, Bildung und Differenz in der Universität</i> (pp. 39–66)<i>. </i>Bielefeld.</p><p>Weyer, J. (2000). <i>Soziale Netzwerke.</i> München: Oldenbourg.</p>","r":[],"d":["Taylor, C. (2009). Multikulturalismus und die Politik der Anerkennung. Frankfurt/Main.\nUNESCO (2009). Policy guidelines on inclusion in education. Paris (Online: http://www.scribd.com/doc/37626440/UNESCOEducation-Inclusion-Policy-Guidelinesalization. pdf)\nUNESCO [United Nations Educational, Scientific and Cultural Organization] (2018). Global education monitoring report 2019: migration, displacement and education: building bridges, not walls. UNESCO. \nVoorberg, W., Bekkers, V., & Tummers, L. (2014). Co-creation in social innovation: a comparative case-study on the influential factors and outcomes of co-creation. Ottawa:  IRSPM.\nWald, A. & Jansen, D. (2007). Netzwerke. In A. Benz, S. Lütz, U. Schimank & G. Simonis (Hrsg.), Handbuch Governance (pp. 93–105). Wiesbaden: VS.\nWelsch, W. (1999). Transculturality – the puzzling form of cultures today. In M. Featherstone & S. Lash (eds.), Spaces of Culture: City, Nation, World (S. 194 – 213). London: Sage.\nWelsch, W. (2010). Was ist eigentlich Transkulturalität? In L. Darowska et al. (eds.), Hochschule als transkultureller Raum? Kultur, Bildung und Differenz in der Universität (pp. 39–66). Bielefeld.\nWeyer, J. (2000). Soziale Netzwerke. München: Oldenbourg."]},"tp":"item"}],"i":{"i":"bct234g7at32","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Introduction</span></p>","a":"<p><b>Introduction</b></p>","r":[],"d":["Introduction"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"v":false},"s":{"i":"oqe4if5di59m","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt3_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Summary</span></p>","a":"<p><b>Summary</b></p>","r":[],"d":["Summary"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_50196, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"v":false}},"s":{"t":"REFERENCES","te":true,"nbe":true,"ftw":true,"iw":960,"ih":540,"csc":1,"lar":true,"dat":3,"upb":false,"mce":true,"tlw":0.25,"s":true,"ge":false,"san":false,"agt":1,"nat":1,"ca":"ABCDEFGHIJKLMNOPQRSTUVWXYZ"}},"s":{"f":{"t":{"tf":{"f":"fnt3_50196","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"nt":{"tf":{"f":"fnt2_50196","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"bt":{"tf":{"f":"fnt3_50196","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}}},"p":{"accessibilityHiddenLink":"Go to the beginning of the description","accessibilitySkinCreatedWith":"Created with iSpring evaluation version","accessibleAriaLabelBottomPanel":"Bottom Bar","accessibleAriaLabelItemDescription":"Element description","accessibleAriaLabelNavigationButtons":"Navigation buttons","accessibleAriaLabelSettings":"Accessibility Settings","backToAppButtonLabel":"Back","contentList":"Content List","emptySearchResult":"No matches found.","enableAccessibilityMode":"Turn on accessibility mode","enableNormalMode":"Turn off accessibility mode","nextButton":"NEXT","prevButton":"PREV","search":"Search"},"c":{"i":"765enyno8xa5","n":"Custom preset","s":{"i":{"bg":16250871,"b":14737632,"titc":16777215,"titb":5723991,"ci":false,"tb":16777215,"ttc":4737096,"ttb":11316396,"gab":5409759,"gtc":16777215,"hlb":16772295,"hlt":4737096,"slb":16768150,"slt":4737096},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":5409759},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":13882575,"plb":16777215,"bb":11057222,"hbb":9939000,"btc":16777215,"hbtc":16777215,"mbat":5409759},"sf":{"stf":4737096,"sif":10066329,"sbg":16777215,"sbr":13028820,"asbg":16777215,"asbr":10133670}}},"m":{"i":"lur57acvcv7n","n":"Visuals.Common.Editor.ColorScheme.Name.LightBlue","s":{"i":{"bg":16250871,"b":14737632,"titc":16777215,"titb":5723991,"ci":false,"tb":16777215,"ttc":4737096,"ttb":11316396,"gab":7374534,"gtc":5796020,"hlb":15463931,"hlt":0,"slb":16768150,"slt":4737096},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":238},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":13554131,"plb":16777215,"bb":5409759,"hbb":3898324,"btc":16777215,"hbtc":16777215,"mbat":2833222},"sf":{"stf":4737096,"sif":10066329,"sbg":16777215,"sbr":13028820,"asbg":16777215,"asbr":10133670}}}},"ps":"{\n    \"c\" : {\n        \"P\" : {\n            \"e\" : true,\n            \"l\" : true,\n            \"m\" : \"slideTimeline\",\n            \"v\" : false\n        },\n        \"l\" : true,\n        \"n\" : \"bySlides\",\n        \"o\" : false,\n        \"p\" : false,\n        \"r\" : true,\n        \"s\" : false,\n        \"v\" : true,\n        \"w\" : false,\n        \"x\" : false,\n        \"z\" : true\n    },\n    \"l\" : {\n        \"button.content.normal\" : \"#ffffff\",\n        \"button.content.over\" : \"#ffffff\",\n        \"button.face.normal\" : \"#a8b846\",\n        \"button.face.over\" : \"#97a838\",\n        \"companyLogo.background\" : \"#F3F3F3\",\n        \"hyperlink\" : \"#528BDF\",\n        \"listItem.face.over\" : \"#E1E2E2\",\n        \"listItem.face.pressed\" : \"#9DA2A6\",\n        \"listItem.label.over\" : \"#47484A\",\n        \"listItem.label.pressed\" : \"#FFFFFF\",\n        \"listItem.label.visited\" : \"#727374\",\n        \"page.background\" : \"#d3d4cf\",\n        \"panel.background\" : \"#FFFFFF\",\n        \"panel.text\" : \"#47484A\",\n        \"player.background\" : \"#ffffff\",\n        \"popup.background\" : \"#F3F3F3\",\n        \"progress.background\" : \"#F7F7F7\",\n        \"progress.loading\" : \"#D9D9D9\",\n        \"progress.playback\" : \"#528BDF\",\n        \"slide.border\" : \"#e0e0e0\",\n        \"text\" : \"#47484A\"\n    },\n    \"m\" : false,\n    \"o\" : {\n        \"h\" : true,\n        \"m\" : true,\n        \"n\" : false,\n        \"s\" : true,\n        \"t\" : false\n    },\n    \"s\" : {\n        \"L\" : true,\n        \"l\" : true,\n        \"n\" : false,\n        \"o\" : true,\n        \"p\" : false,\n        \"v\" : true\n    },\n    \"t\" : {\n        \"b\" : [ \"attachments\" ],\n        \"bl\" : false,\n        \"c\" : true,\n        \"l\" : true,\n        \"v\" : true\n    }\n}","sb":"C:/Users/dbara/Desktop/mooc-es (Published)/data/interaction_bg_1.png","fp":false,"rs":{"a":{},"v":{},"i":{"C:/Users/dbara/Desktop/mooc-es (Published)/data/interaction_bg_1.png":{"s":"intr7\\images\\interaction_bg_1.png","v":1280,"h":720}}},"fs":{"fnt0_50196":["intr7/fonts/fnt0.woff"],"fnt1_50196":["intr7/fonts/fnt1.woff"],"fnt2_50196":["intr7/fonts/fnt2.woff"],"fnt3_50196":["intr7/fonts/fnt3.woff"]},"S":{"fnt0_50196":{"f":"Open Sans","b":false,"i":false},"fnt1_50196":{"f":"Open Sans","b":false,"i":true},"fnt2_50196":{"f":"Segoe UI","b":false,"i":false},"fnt3_50196":{"f":"Segoe UI","b":true,"i":false}},"v":{}}";
	var skinSettings = {};
	loadHandler&&loadHandler(131, 'interactivity_fr20nsxjeptc', interactionJson, skinSettings);
	})();